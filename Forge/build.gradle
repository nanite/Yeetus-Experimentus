plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '6.0.+'
    id 'net.darkhax.curseforgegradle' version '1.0.14'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}

archivesBaseName = "${project.property("mod_name")}-${project.name}"

Project commonProject = parent.project("Common")


mixin {
    add commonProject.sourceSets.main, "${mod_id}.refmap.json"
    config("${mod_id}.mixins.json")
}

minecraft {
    mappings channel: 'official', version: minecraft_version

    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${parent.name}.${project.name}.main"
            taskName 'Client'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modClientRun {
                    source sourceSets.main
                    source commonProject.sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${parent.name}.${project.name}.main"
            taskName 'Server'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modServerRun {
                    source sourceSets.main
                    source commonProject.sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly commonProject
    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
}

tasks.withType(JavaCompile) {
    source(commonProject.sourceSets.main.allSource)
}

processResources {
    from commonProject.sourceSets.main.resources
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.maven_group
            artifactId project.archivesBaseName
            version project.mod_version
            artifact jar
        }
    }

    repositories {
        if (ENV.NANITE_TOKEN) {
            maven {
                url "https://maven.nanite.dev/releases"
                credentials {
                    username = "nanite"
                    password = "${ENV.NANITE_TOKEN}"
                }
            }
        }
    }
}