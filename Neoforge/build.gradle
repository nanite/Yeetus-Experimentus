plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.+'
    id 'net.neoforged.gradle.mixin' version '7.0+'
    id 'java-library'
}

base {
    archivesName = "${project.property("mod_name")}-${project.name}"
}

Project commonProject = parent.project("Common")

mixin {
    config("${mod_id}.mixins.json")
}

runs {
    configureEach {
        modSource project.sourceSets.main
    }

    client {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neoforge_version}"
    compileOnly commonProject
}

publishing {
    publications {
        register("mavenNeoforge", MavenPublication) {
            artifactId base.archivesName.get()
            artifact jar
        }
    }
}

// Thanks jared
Spec<Task> notNeoTask = { Task it -> !it.name.startsWith("neo") } as Spec<Task>

tasks.withType(JavaCompile).matching(notNeoTask).configureEach {
    source(project(":Common").sourceSets.main.allSource)
}

tasks.withType(Javadoc).matching(notNeoTask).configureEach {
    source(project(":Common").sourceSets.main.allJava)
}

tasks.named("sourcesJar", Jar) {
    from(project(":Common").sourceSets.main.allSource)
}

tasks.withType(ProcessResources).matching(notNeoTask).configureEach {
    from project(":Common").sourceSets.main.resources
}
